continue
t.to_json
t
continue
t
continue
t
continue
t
continue
t
"str".length
continue
"str".length
t
continue
t
continue
t
continue
t
continue
@responses
t
continue
a
continue
a.max_by(&:size)
a.class
a
continue
a.values.max_by(&:size)
a.values
a
continue
a.values.join()
a.values
a
continue
a.values.length
a.values
a.count
a
continue
a
continue
a
continue
a
continue
Email.first.responses.count
Response.first
Response.frst
Email.count
Response.count
continue
@responses.map{ |r| r.email}.uniq
@responses.uniq
@responses
exit-all
continue
if e
if e;
if e
e == true
e
entry
email
continue
email
continue
email
continue
email
continue
email
continue
email
continue
email
continue
["n/a", "na", "#name", "{question_not_shown}", "br"].include?(entry)
entry
email
e
exit-all
help
continue
!!!
key
row
continue
row
continue
lol.length
lol.count
quit
:q
Response.all
quit
continue
Response
quit
continue
delete
interrupt
h
continue
Response.all
quit
h
continue
row
